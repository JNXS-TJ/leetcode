/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
 /*
 The first edition
 It's very straightforward.
 */
class Solution {
public:
    vector<int> nextLargerNodes(ListNode* head) {
        vector<int> ans;
        vector<int> num;
        while(head){
            num.push_back(head->val);
            head = head->next;
        }
        for(int i = 0; i < num.size(); i++){
            int j;
            for(j = i + 1; j < num.size(); j++){
                if(num[j] > num[i])break;
            }
            if(j != num.size())ans.push_back(num[j]);
            else ans.push_back(0);
        }
        return ans;
    }
};


/*
The second edition
example:
  input:[2,7,4,3,5]
  
	5           4           3             2             1
 	stack:
  
  		    3		4			    2
	5	    5	        5	        7	    7
	ans:
	0						5 0					5 5 0					0 5 5 0       7 0 5 5 0
	
*/
class Solution {
public:
    vector<int> nextLargerNodes(ListNode* head) {
        vector<int> ans;
        vector<int> num;
        stack<int> S;
        while(head){
            num.push_back(head->val);
            head = head->next;
        }
        ans.resize(num.size());
        S.push(num.back());
        ans.back() = 0;
        for(int i = num.size()-2; i>=0; i--){
            int val = num[i];
            while(!S.empty()){
                if(val >= S.top())S.pop();
                else break;
            }
            if(S.empty())ans[i] = 0;
            else ans[i] = S.top();
            S.push(val);
        }
        return ans;
    }
};
